{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mikebaker/access/client/src/containers/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nexport default function Register(props) {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    var cb = props.postRegLogin;\n    loginUser(cb, function (response) {\n      cb('');\n      console.log(response);\n    });\n  }\n\n  function loginUser(data, callback) {\n    var url;\n    if (process.env.NODE_ENV === 'production') url = 'https://www.thelocalgame.com/register';else url = 'http://localhost:3000/register';\n    console.log(email + ' ' + password);\n    axios.post(url, {\n      email: email,\n      password: password,\n      confirmpassword: password\n    }, {\n      withCredentials: true\n    }).then(response => {\n      history.push(\"/\");\n      callback(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"User name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"username\",\n          placeholder: \"username\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"We'll never share your email with anyone else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"confirmpassword\",\n          placeholder: \"Confirm Password\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Check me out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"hYIr6M9T1WqVBwsH98r7bce/7aA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/mikebaker/access/client/src/containers/Register.jsx"],"names":["React","useState","Form","Button","axios","useHistory","Register","props","email","setEmail","password","setPassword","confirmpassword","setConfirmPassword","history","handleSubmit","e","preventDefault","cb","postRegLogin","loginUser","response","console","log","data","callback","url","process","env","NODE_ENV","post","withCredentials","then","push","catch","err","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Register(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const history = useHistory();\n\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  var cb = props.postRegLogin;\n    loginUser(cb, function(response) {\n        cb('');\n        console.log(response);\n    });\n}\n\nfunction loginUser (data, callback){\n  \n  var url;\n    if(process.env.NODE_ENV === 'production')\n      url='https://www.thelocalgame.com/register';\n    else\n      url='http://localhost:3000/register';\n  console.log(email+' '+password);\n  axios.post(url,{\n    email:email,\n    password:password,\n    confirmpassword:password},\n    {withCredentials: true}\n  ).then(response =>{\n    history.push(\"/\");\n    callback(response.data);\n  }).catch(err =>{\n    console.log(err);\n  })\n}\n\n\n    return (\n        <div>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>User name</Form.Label>\n              <Form.Control type=\"username\" \n              placeholder=\"username\" \n              onChange={e => setEmail(e.target.value)}\n                />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" \n              placeholder=\"Password\" \n              onChange={e => setPassword(e.target.value)}\n                />\n            <Form.Label>Confirm password</Form.Label>\n              <Form.Control type=\"confirmpassword\" \n              placeholder=\"Confirm Password\" \n              onChange={e => setConfirmPassword(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Check type=\"checkbox\" label=\"Check me out\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </div>\n        )\n    }\n\n"]},"metadata":{},"sourceType":"module"}